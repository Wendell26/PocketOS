#!/bin/bash
inst() {
echo "Instalador do WM PocketOS"
read -p "Seu nome: " fnm
read -p "Nome de usuário: " usr
read -p "Senha para $usr: " pwd
echo "Detectando hardware..."
device="$(getprop ro.product.model)"
brand="$(getprop ro.product.brand)"
cpu="$(getprop ro.product.board)"
system="$(uname -o)"
arch="$(getprop ro.product.cpu.abi)"
ver="$(shuf -i 1-4 -n 1).$(shuf -i 8-15 -n 1).$(shuf -i 1-5 -n 1)"
echo "Hardware detectado:"
echo "Marca: $brand | Modelo: $device"
echo "Processador: $cpu | Arquitetura: $arch"
echo "Sistema operacional: $system"
read -p "As informações acima estão corretas? (S/n) " sure
if [ "$sure" == "S" ]; then
echo "Continuando a instalação."
sleep 2
echo "export system=$system" >> $PREFIX/etc/bash.bashrc
inst0
else
echo "Para continuar com a instalação, insira as informações corretas."
read -p "Marca do dispositivo: " brand
read -p "Modelo do dispositivo: " device
read -p "Processador do dispositivo: " cpu
read -p "Arquitetura do processador: " arch
read -p "Sistema operacional do dispositivo: " system
echo "export system=$system" >> $PREFIX/etc/bash.bashrc
echo "Marca: $brand | Modelo: $device"
echo "Processador: $cpu | Arquitetura: $arch"
echo "Sistema operacional: $system"
echo "Continuando com a instalação."
sleep 2
inst0
fi
}
inst0() {
echo "Preparando para instalação..."
sleep 2
echo "Atualizando repositórios."
apt update
echo "Atualizando programas."
apt upgrade -y
echo "Instalando programas."
apt install tree mlocate figlet openssl openssh wget ncurses-utils -y
updatedb
echo "Programas instalados! Continuando a instalação."
sleep 2
inst1
}
inst1() {
read -p "Digite o caminho para instalar o PocketOS: " instdir
if [ -f "$instdir/.installed" ]; then
echo "Alerta: um sistema PocketOS existente foi detectado em $instdir."
echo "1. Deletar sistema atual e criar um novo"
echo "2. Utilizar o sistema instalado em $instdir"
echo "3. Deletar sistema atual e abortar instalação"
read -p "Escolha: " choice
case $choice in
   1) rm -rf $instdir
      mkdir $instdir
      create
      ;;
   2) echo "export wmsys="$instdir"" >> $PREFIX/etc/bash.bashrc
      echo "export system="$(uname -o)"" >> $PREFIX/etc/bash.bashrc
      end
      ;;
   3) rm -rf $instdir
      exit 0
      ;;
   *) echo "Abortando."
      exit 0
      ;;
esac
else
create
fi
}
create() {
touch $instdir/.installed
mkdir $instdir/login
echo "$fnm" >> $instdir/login/name.txt
echo "$usr" >> $instdir/login/user.txt
echo "$pwd" >> $instdir/login/passwd.txt
chmod +x *
cp wsh $PREFIX/bin
cp wmabout.sh $PREFIX/bin/wmabout
cp wmver.sh $PREFIX/bin/wmver
cp wmchk $PREFIX/bin/wmchk
cp wmset $PREFIX/bin/wmset
echo "export wmsys="$instdir"" >> $PREFIX/etc/bash.bashrc
cd $instdir
mkdir -p $instdir/home
echo "Criando chave de produto WM PocketOS única..."
echo "WM-$(shuf -i 1000-9999 -n 1)-$(shuf -i 1000-9999 -n 1)-PCKOS-$(shuf -i 1000-9999 -n 1)-$(shuf -i 1000-9999 -n 1)" >> $instdir/.WM_key.txt
echo "Chave criada: $(cat $instdir/.WM_key.txt)"
echo "Copie a chave. 15 segundos restantes!"
sleep 15
echo "WM PocketOS para $arch $ver" >> $instdir/ver
echo "WM PocketOS para $arch $ver" >> $instdir/about
echo "Executando no $brand $device." >> $instdir/about
echo "Software instalado em $(date)." >> $instdir/about
echo "Migrado do $system para o WM PocketOS para $arch $ver." >> $instdir/about
cd
echo "Instalação completa!"
sleep 2
end
}
end() {
echo "O WM PocketOS foi instalado!"
echo "1. Fechar o Termux"
echo "2. Abrir outra sessão do Bash"
echo "3. Continuar o uso do Termux"
read -p "Escolha: " choice
case $choice in
   1) pkill com.termux ;;
   2) bash ;;
   3) echo "Te vejo no PocketOS!" && exit 0 ;;
   *) echo "Opção $choice inválida. Fechando o Termux..." && sleep 2 && pkill com.termux ;;
esac
}
inst
